{
    "repository": {
        "object": {
            "entries": [
                {
                    "name": "lint_test.yml",
                    "object": {
                        "text": "name: lint-and-test\n\non:\n  pull_request:\n  push:\n    branches:\n      - main\n    tags-ignore:\n      - \"**\"  # Skip re-linting when tags are added\n\njobs:\n  lint:\n    runs-on: ubuntu-latest\n\n    steps:\n    - uses: actions/checkout@v4\n\n    - name: Set up Python\n      uses: actions/setup-python@v6\n      with:\n        python-version-file: \"pyproject.toml\"\n\n    - name: Install uv\n      uses: astral-sh/setup-uv@v6\n      with:\n        version: \"0.8.x\"\n        enable-cache: true\n        cache-dependency-glob: \"uv.lock\"\n\n    - name: Install dependencies\n      run: uv sync --all-extras --dev\n\n    - name: Run mypy\n      run: uv run mypy .\n      if: always()\n\n  test:\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        python-version: [\"3.10\", \"3.11\", \"3.12\", \"3.13\", \"3.14-dev\"]\n      fail-fast: false\n\n    steps:\n    - uses: actions/checkout@v4\n\n    - name: Get Non-Hyphenated Python Version\n      id: get-pyver\n      run: |\n        echo \"PYVER=$(cut -d '-' -f 1 <<< ${{ matrix.python-version }})\" >> $GITHUB_OUTPUT\n\n    - name: Set up (release) Python ${{ matrix.python-version }}\n      uses: actions/setup-python@v6\n      if: \"!endsWith(matrix.python-version, '-dev')\"\n      with:\n        python-version: ${{ matrix.python-version }}\n\n    - name: Set up (deadsnakes) Python ${{ matrix.python-version }}\n      uses: deadsnakes/action@v3.2.0\n      if: endsWith(matrix.python-version, '-dev')\n      with:\n        python-version: ${{ matrix.python-version }}\n\n    - name: Install uv\n      uses: astral-sh/setup-uv@v6\n      with:\n        version: \"0.8.x\"\n        enable-cache: true\n        cache-dependency-glob: \"uv.lock\"\n\n    - name: Install dependencies\n      run: |\n        uv venv --python ${{ steps.get-pyver.outputs.PYVER }}\n        uv pip install tox-uv\n\n    - name: Run tests w/tox\n      run: |\n        uv run tox -e ${{ steps.get-pyver.outputs.PYVER }}\n\n    - name: Cache coverage for ${{ matrix.python-version }}\n      uses: actions/upload-artifact@v4\n      with:\n        name: cov_py${{ matrix.python-version }}\n        path: .coverage\n        if-no-files-found: error\n        include-hidden-files: true\n\n  combine-cov:\n    runs-on: ubuntu-latest\n    needs: test\n\n    steps:\n    - uses: actions/checkout@v4\n\n    - name: Set up Python\n      uses: actions/setup-python@v6\n      with:\n        python-version-file: \"pyproject.toml\"\n\n    - name: Pull coverage workflow artifacts\n      uses: actions/download-artifact@v4\n      with:\n        path: cov_cache/\n\n    - name: Install cov & combine\n      run: |\n        python -m pip install coverage\n        coverage combine ./cov_cache/**/.coverage\n\n    - name: Report coverage\n      run: |\n        coverage html\n\n        # Report a markdown version to the action summary\n        echo '**Combined Coverage**' >> $GITHUB_STEP_SUMMARY\n        coverage report --format=markdown >> $GITHUB_STEP_SUMMARY\n\n    - name: Publish cov HTML\n      uses: actions/upload-artifact@v4\n      with:\n        path: htmlcov/\n        name: cov_report_html\n"
                    }
                },
                {
                    "name": "pypi_release.yml",
                    "object": {
                        "text": "name: Publish to PyPI\n\non:\n  release:\n    types: [published]\n\njobs:\n  build:\n    name: Build dist & publish\n    runs-on: ubuntu-latest\n    environment:\n      name: pypi\n      url: https://pypi.org/p/flake8-annotations\n    permissions:\n      contents: write\n      id-token: write\n\n    steps:\n    - uses: actions/checkout@v4\n\n    - name: Install uv\n      uses: astral-sh/setup-uv@v6\n      with:\n        version: \"0.8.x\"\n        enable-cache: true\n        cache-dependency-glob: \"uv.lock\"\n\n    - name: Set up Python\n      uses: actions/setup-python@v6\n      with:\n        python-version-file: \"pyproject.toml\"\n\n    - name: Build package\n      run: uv build\n\n    - name: Publish to PyPI\n      uses: pypa/gh-action-pypi-publish@release/v1.13\n      with:\n        print-hash: true\n\n    - name: Upload wheel to release\n      env:\n        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n      run:\n        gh release upload ${{ github.event.release.tag_name }} ./dist/flake8_annotations-*.whl\n"
                    }
                }
            ]
        }
    }
}
